name: ci-smoke
on:
  pull_request:
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Install functions deps
        if: hashFiles('functions/package.json') != ''
        run: npm ci --prefix functions

      - name: Start emulators (nutzt .firebaserc Project-ID)
        shell: bash
        run: |
          nohup firebase emulators:start --only functions,firestore > /tmp/emulators.log 2>&1 &
          # auf Port 5001 warten (max ~120s)
          for i in {1..120}; do
            (echo >/dev/tcp/127.0.0.1/5001) >/dev/null 2>&1 && break
            sleep 1
          done
          echo "---- EMULATOR LOG (tail) ----"
          tail -n 200 /tmp/emulators.log || true
          
      - name: list emulated functions
        run: curl -s http://127.0.0.1:5001/recovery-engine/europe-west1/__/functions.json && echo

      - name: wait for onboarding export
        shell: bash
        run: |
          for i in {1..60}; do
            out=$(curl -sf http://127.0.0.1:5001/recovery-engine/europe-west1/__/functions.json || true)
            echo "$out" | grep -q 'europe-west1-onboarding' && exit 0
            sleep 1
          done
          echo "onboarding not registered"; exit 1

        
      - name: Run smoke from ticket
        shell: pwsh
        run: |
          $nr = $null
          $branch = "${{ github.head_ref }}"
          if ($branch -match 'AT-(\d{3})') { $nr = $Matches[1] }

          if (-not $nr) {
            git fetch origin ${{ github.base_ref }} --depth=1 *> $null
            $diff = git diff --name-only origin/${{ github.base_ref }}...HEAD
            $m = ($diff | Select-String 'tickets/AT-(\d{3})\.md' -AllMatches | ForEach-Object { $_.Matches } | Select-Object -First 1)
            if ($m) { $nr = $m.Groups[1].Value }
          }

          if (-not $nr) {
            $last = Get-ChildItem tickets -Filter 'AT-*.md' | Sort-Object Name | Select-Object -Last 1
            if ($last -and $last.Name -match 'AT-(\d{3})\.md') { $nr = $Matches[1] }
          }

          if (-not $nr) { Write-Error "Keine Ticketnummer gefunden."; exit 1 }

          $ticket = "tickets/AT-$("{0:D3}" -f [int]$nr).md"
          if (-not (Test-Path $ticket)) { Write-Error "Ticket $ticket fehlt."; exit 1 }

          $content = Get-Content $ticket -Raw
          $smokeBlock = ($content -split '## Smoke')[1]
          if (-not $smokeBlock) { Write-Error "Ticket enth√§lt keinen '## Smoke'-Abschnitt."; exit 1 }

          $url = Select-String -InputObject $smokeBlock -Pattern 'http://127\.0\.0\.1:[0-9]+/[^\s`"]+' -AllMatches |
                 ForEach-Object { $_.Matches } | Select-Object -First 1 | ForEach-Object { $_.Value }
          if (-not $url) { Write-Error "Keine Smoke-URL im Ticket gefunden."; exit 1 }

          $code = curl -s -o /dev/null -w "%{http_code}" $url
          if ([int]$code -ge 200 -and [int]$code -lt 300) {
            Write-Host "Smoke OK: $code $url"
          } else {
            Write-Error "Smoke FAIL: $code $url"; exit 1
          }
